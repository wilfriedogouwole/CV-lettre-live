name: üöÄ Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      # - name: ‚éî Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: üì• Download deps
      #   uses: bahmutov/npm-install@v1

      - name: üî¨ Lint
        run: bun run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install

      # - name: ‚éî Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: üì• Download deps
      #   uses: bahmutov/npm-install@v1

      - name: üîé Type check
        run: bun run typecheck

  build:
    name: üê≥ build
    uses: ./.github/workflows/build.yml
    secrets: inherit


  deploy:
    name: üöÄ Deploy
    runs-on: [self-hosted]
    needs: [lint, typecheck, build]
    # only build/deploy main branch on pushes
    if: ${{ ( github.ref == 'refs/heads/main'  || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    # env:
    #   APP_ENV: ${{ secrets.APP_ENV }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üöÄ Run Docker Compose on v1
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          POLE_EMPLOI_CLIENT_SECRET: ${{ secrets.POLE_EMPLOI_CLIENT_SECRET }}
          POLE_EMPLOI_CLIENT_ID: ${{ secrets.POLE_EMPLOI_CLIENT_ID }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}

        run: |
            docker pull derrick93/cvdocker:v1
            docker run -p 4001:3000 \
              -e APP_ENV="$APP_ENV" \
              -e DATABASE_URL="$DATABASE_URL" \
              -e NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" \
              -e CLERK_SECRET_KEY="$CLERK_SECRET_KEY" \
              -e OPENAI_API_KEY="$OPENAI_API_KEY" \
              -e POLE_EMPLOI_CLIENT_SECRET="$POLE_EMPLOI_CLIENT_SECRET"\
              -e POLE_EMPLOI_CLIENT_ID="$POLE_EMPLOI_CLIENT_ID"\
              -e STRIPE_SECRET_KEY="$STRIPE_SECRET_KEY" \
              -e STRIPE_WEBHOOK_SECRET="$STRIPE_WEBHOOK_SECRET" \
              -e NEXT_PUBLIC_APP_URL="https://cvmaster.derrickogouwole.fr" \
              -e NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY" \
              --name cvdocker-new -d derrick93/cvdocker:v1
            docker system prune --all --volumes --force